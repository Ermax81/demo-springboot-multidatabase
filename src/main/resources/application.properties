
# initialize database using JPA
# will be ignored if you have a config for spring.jpa.hibernate.ddl-auto
spring.jpa.generate-ddl=true

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.type=org.mariadb.jdbc.MariaDbDataSource
#spring.datasource.type=org.mariadb.jdbc.MariaDbPoolDataSource
#spring.datasource.url=jdbc:mariadb://localhost:3306/test
#spring.datasource.username=root
#spring.datasource.password=root
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver


###
spring.datasource.hobby.url=jdbc:mariadb://localhost:3306/hobby
spring.datasource.hobby.username=root
spring.datasource.hobby.password=root
spring.datasource.hobby.driver-class-name=org.mariadb.jdbc.Driver


###
spring.datasource.person.url=jdbc:mariadb://localhost:3306/person
spring.datasource.person.username=root
spring.datasource.person.password=root
spring.datasource.person.driver-class-name=org.mariadb.jdbc.Driver

# by default false: if errors on sql init application fails to start
#spring.sql.init.continue-on-error=true

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1

# https://docs.spring.io/spring-boot/docs/2.1.x/reference/html/howto-database-initialization.html
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true

# We will use shema.sql and data.sql instead of spring.jpa.hibernate.ddl-auto=create
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update

# want to have both Hibernate automatic schema generation
# in conjugation with script-based schema creation and data population, we'll have to use:
#spring.jpa.defer-datasource-initialization=true
#spring.sql.init.mode=always

# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB103Dialect

### LOGGING
logging.level.org.hibernate.SQL=DEBUG